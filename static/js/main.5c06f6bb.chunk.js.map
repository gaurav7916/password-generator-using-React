{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","length","setLength","useState","password","setPassword","showModal","setShowModal","useUppercase","setUseUppercase","useLowercase","setUseLowercase","useNumbers","setUseNumbers","useSymbols","setUseSymbols","useDuplicates","setUseDuplicates","React","createElement","className","id","title","onClick","passwordElement","document","getElementById","range","createRange","selectNode","selection","window","getSelection","removeAllRanges","addRange","execCommand","setTimeout","err","console","error","class","concat","type","min","max","value","onChange","event","target","checked","e","parseInt","charset","usedCharacters","i","selectedChar","charAt","Math","floor","random","includes","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.5c06f6bb.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [length, setLength] = useState(10);\n  const [password, setPassword] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [useUppercase, setUseUppercase] = useState(true);\n  const [useLowercase, setUseLowercase] = useState(true);\n  const [useNumbers, setUseNumbers] = useState(true);\n  const [useSymbols, setUseSymbols] = useState(true);\n  const [useDuplicates, setUseDuplicates] = useState(false);\n\n  function handleChange(event) {\n    setLength(event.target.value);\n  }\n\n  function generatePassword() {\n    const length = parseInt(document.getElementById(\"length\").value);\n    const useUppercase = document.getElementById(\"uppercase\").checked;\n    const useLowercase = document.getElementById(\"lowercase\").checked;\n    const useNumbers = document.getElementById(\"numbers\").checked;\n    const useSymbols = document.getElementById(\"symbols\").checked;\n    const useDuplicates = document.getElementById(\"duplicates\").checked;\n\n    let charset = \"\";\n    if (useUppercase) charset += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    if (useLowercase) charset += \"abcdefghijklmnopqrstuvwxyz\";\n    if (useNumbers) charset += \"0123456789\";\n    if (useSymbols) charset += \"!#$%&*@^?~\";\n    let password = \"\";\n    let usedCharacters = \"\"; // Track used characters to check for duplicates\n\n    for (let i = 0; i < length; i++) {\n      let selectedChar = charset.charAt(\n        Math.floor(Math.random() * charset.length),\n      );\n\n      if (useDuplicates) {\n        while (usedCharacters.includes(selectedChar)) {\n          // Keep generating until a non-duplicate character is found\n          selectedChar = charset.charAt(\n            Math.floor(Math.random() * charset.length),\n          );\n        }\n        usedCharacters += selectedChar; // Add the selected character to usedCharacters\n      }\n      password += selectedChar;\n    }\n    setPassword(password);\n  }\n\n  function copyPassword() {\n    const passwordElement = document.getElementById(\"password\");\n    const range = document.createRange();\n    range.selectNode(passwordElement);\n    const selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n    try {\n      document.execCommand(\"copy\");\n      setShowModal(true);\n      setTimeout(() => {\n        setShowModal(false);\n      }, 1000);\n    } catch (err) {\n      console.error(\"Unable to copy to clipboard\");\n    } finally {\n      selection.removeAllRanges();\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h3>Password Generator</h3>\n      <div className=\"password-field\">\n        <span id=\"password\">{password}</span>\n        <button\n          className=\"passwrd_button\"\n          id=\"clipboard\"\n          title=\"Copy\"\n          onClick={copyPassword}\n        >\n          <i class=\"fa-regular fa-paste\"></i>\n        </button>\n      </div>\n      <div className={`modal ${showModal ? \"show\" : \"\"}`}>\n        <div className=\"modal-content\">Password copied !</div>\n      </div>\n\n      <div className=\"options\">\n        <div className=\"currentLength\">\n          <label>Password Length</label>\n          <input\n            class=\"number\"\n            type=\"number\"\n            id=\"length\"\n            min=\"4\"\n            max=\"30\"\n            value={length}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"option\">\n          <label>Exclude Duplicates</label>\n          <input\n            class=\"checkbox\"\n            type=\"checkbox\"\n            id=\"duplicates\"\n            checked={useDuplicates}\n            onChange={(e) => setUseDuplicates(e.target.checked)}\n          />\n        </div>\n        <div className=\"option\">\n          <label>Include UpperCase (A-Z)</label>\n          <input\n            class=\"checkbox\"\n            type=\"checkbox\"\n            id=\"uppercase\"\n            checked={useUppercase}\n            onChange={(e) => setUseUppercase(e.target.checked)}\n          />\n        </div>\n        <div className=\"option\">\n          <label>Include LowerCase (a-z)</label>\n          <input\n            class=\"checkbox\"\n            type=\"checkbox\"\n            id=\"lowercase\"\n            checked={useLowercase}\n            onChange={(e) => setUseLowercase(e.target.checked)}\n          />\n        </div>\n        <div className=\"option\">\n          <label>Include Numbers (0-9)</label>\n          <input\n            class=\"checkbox\"\n            type=\"checkbox\"\n            id=\"numbers\"\n            checked={useNumbers}\n            onChange={(e) => setUseNumbers(e.target.checked)}\n          />\n        </div>\n        <div className=\"option\">\n          <label>Include Symbols (@#$%&*)</label>\n          <input\n            class=\"checkbox\"\n            type=\"checkbox\"\n            id=\"symbols\"\n            checked={useSymbols}\n            onChange={(e) => setUseSymbols(e.target.checked)}\n          />\n        </div>\n      </div>\n      <button\n        className=\"passwrd_button\"\n        id=\"generate\"\n        onClick={generatePassword}\n      >\n        Generate Password\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}